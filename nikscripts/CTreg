#!/bin/bash
#usage: CT_T1_registration subj WORKDIR IMAGEDIR

subj=$1
WORKDIR=$2
IMAGEDIR=$3

cd ${WORKDIR}/${IMAGEDIR}/${subj}

#Register CT to T1 (linear)

flirt -in CT.nii -ref T1.nii -out CTr -cost normmi

temp=${FSLDIR}/data/standard/MNI152_T1_1mm.nii.gz

if [[ ! -f T1w0GenericAffine.mat ]]

  ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS=$ncpus
  export ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS

  #ANTS registration (linear and non-linear registration to template)

  antsRegistration --verbose 1 --dimensionality 3 --float 0 --collapse-output-transforms 1 --output [T1w,T1w.nii.gz,T1iw.nii.gz] --interpolation Linear --use-histogram-matching 0 --winsorize-image-intensities [0.005,0.995] --initial-moving-transform [${temp},T1.nii,1] --transform Rigid[0.1] --metric MI[${temp},T1.nii,1,32,Regular,0.25] --convergence [1000x500x250x100,1e-6,10] --shrink-factors 8x4x2x1 --smoothing-sigmas 3x2x1x0vox --transform Affine[0.1] --metric MI[${temp},T1.nii,1,32,Regular,0.25] --convergence [1000x500x250x100,1e-6,10] --shrink-factors 8x4x2x1 --smoothing-sigmas 3x2x1x0vox --transform SyN[0.1,3,0] --metric CC[${temp},T1.nii,1,4] --convergence [100x70x50x20,1e-6,10] --shrink-factors 8x4x2x1 --smoothing-sigmas 3x2x1x0vox

  #get transform matrix

  c3d_affine_tool -ref T1w.nii.gz -src T1.nii -itk T1w0GenericAffine.mat -ras2fsl -o T1-fsl.mat
  
fi

#warp CT to MNI space

flirt -in CTr -ref T1w -applyxfm -init T1-fsl.mat -interp nearestneighbour -out CTw

if [[ ! -f brainw0GenericAffine.mat ]]

  #generate brain mask for thresholding

  rsync -z ${WORKDIR}/Diff/${subj}/preproc/brainFS.nii .

  #convert brain to fsl (MNI) coordinates

  antsRegistration --verbose 1 --dimensionality 3 --float 0 --collapse-output-transforms 1 --output [brainw,brainw.nii.gz,brainiw.nii.gz] --interpolation Linear --use-histogram-matching 0 --winsorize-image-intensities [0.005,0.995] --initial-moving-transform [${FSLDIR}/data/standard/MNI152_T1_1mm_brain.nii.gz,brainFS.nii,1] --transform Rigid[0.1] --metric MI[${FSLDIR}/data/standard/MNI152_T1_1mm_brain.nii.gz,brainFS.nii,1,32,Regular,0.25] --convergence [1000x500x250x100,1e-6,10] --shrink-factors 8x4x2x1 --smoothing-sigmas 3x2x1x0vox --transform Affine[0.1] --metric MI[${FSLDIR}/data/standard/MNI152_T1_1mm_brain.nii.gz,brainFS.nii,1,32,Regular,0.25] --convergence [1000x500x250x100,1e-6,10] --shrink-factors 8x4x2x1 --smoothing-sigmas 3x2x1x0vox --transform SyN[0.1,3,0] --metric CC[${FSLDIR}/data/standard/MNI152_T1_1mm_brain.nii.gz,brainFS.nii,1,4] --convergence [100x70x50x20,1e-6,10] --shrink-factors 8x4x2x1 --smoothing-sigmas 3x2x1x0vox

  #create mask

  bet2 brainw brainwbet -f 0.2 -m
  rm brainwbet.nii.gz
  mv brainwbet_mask.nii.gz brainmask.nii.gz

fi

#zero voxels outside of brain mask

fslmaths CTw -mas brainmask CTwm

#threshold CT for voxel inspection (may need to be tweaked for each individual patient)

fslmaths CTwm -thrp 95 CTwmt #12000 may be too high

#pull each voxel coordinate with a non-zero value in it

fslmaths CTwmt -bin CTwmt_mask

fslmeants -i CTwmt -m CTwmt_mask --showall --transpose -o longcoords.txt

#housekeeping

cut -d' ' -f1,2,3 longcoords.txt

# (for electrode tracking purposes) apply region masking

rsync -z ${WORKDIR}/Diff/${subj}/preproc/parc_fixsubcort.nii .

flirt -in parc_fixsubcort.nii -ref T1w.nii -applyxfm -init T1-fsl.mat -interp nearestneighbour -out parcw

fslmaths CTwmt_mask -mul parcw CTwparc

#get electrode intensities that correspond to region in LUT (fs2009a in this case)

fslmeants -i CTwparc -m CTwmt_mask --showall --transpose -o coordsinregions.txt

